version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_DATABASE: e-commerce
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # MYSQL_USER: root
      # MYSQL_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - e_commerce_network

  backend:
    build: ./catalog
    container_name: catalog-backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
      JWT_SECRETE_KEY: ${JWT_SECRETE_KEY}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
    networks:
      - e_commerce_network

  frontend:
    build: ./frontend
    container_name: catalog-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "8000:8000"
    environment:
      BASE_BACKEND_URL: ${BASE_BACKEND_URL}
    networks:
      - e_commerce_network

  dss-dash:
    build: ./dss
    container_name: dss-dash-app
    restart: always
    depends_on:
      - frontend
      - backend
    ports:
      - "8050:8050"
    environment:
      BASE_BACKEND_URL: ${BASE_BACKEND_URL}
    networks:
      - e_commerce_network

volumes:
  mysql_data:

networks:
  e_commerce_network:
